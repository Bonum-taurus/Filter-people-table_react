{"version":3,"sources":["components/PeopleFilters.tsx","components/Navbar.tsx","App.tsx","components/PersonLink.tsx","components/Loader/Loader.tsx","components/PeopleTable.tsx","api.ts","components/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["Sex","Params","haveActive","isActive","Navbar","search","useLocation","data-cy","className","role","aria-label","to","aria-current","App","PeopleFilters","useSearchParams","searchParams","setSearchParams","sex","get","query","centuries","getAll","handleClickSex","currentSex","event","preventDefault","params","URLSearchParams","all","delete","set","handleClickCenturies","currentCentury","includes","forEach","century","append","toString","onClick","male","female","type","placeholder","value","onChange","target","aria-hidden","length","param","Loader","SortParams","PersonLink","person","people","personId","useParams","name","born","died","motherName","fatherName","slug","isFindedMother","find","per","isFindedFather","PeopleTable","sort","order","filterPeopleByCenturies","men","filter","Math","ceil","filterPeopleByQuery","queryLowerRegister","toLowerCase","handleClickSortPeople","has","desc","filtredPeople","person1","person2","localeCompare","sortPeople","result","fullFiltrationPeople","e","classNames","map","API_URL","wait","delay","Promise","resolve","setTimeout","a","then","fetch","response","json","PeoplePage","useState","setPeople","isLoad","setIsLoad","isError","setIsError","useEffect","getPeople","catch","finally","Root","path","element","index","replace","ReactDOM","render","document","getElementById"],"mappings":"0MAEKA,EAMAC,E,oDCNCC,EAAa,SAAC,GAClB,OAD0D,EAAtCC,SACF,0CAA4C,eAGnDC,EAAS,WACpB,IAAQC,EAAWC,cAAXD,OAER,OACE,qBACEE,UAAQ,MACRC,UAAU,iCACVC,KAAK,aACLC,aAAW,kBAJb,SAME,qBAAKF,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEA,UAAWN,EACXS,GAAG,IAFL,kBAOA,cAAC,IAAD,CACEC,eAAa,OACbJ,UAAWN,EACXS,GAAE,iBAAYN,GAHhB,4BCpBGQ,G,MAAM,WACjB,OACE,sBAAKN,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,qBAAKC,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,a,wBFVLR,K,UAAAA,E,SAAAA,E,YAAAA,M,cAMAC,K,UAAAA,E,cAAAA,E,uBAAAA,M,KAME,IGLFD,EHKQc,EAAgB,WAC3B,MAAwCC,cAAxC,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAMF,EAAaG,IAAIlB,EAAOiB,MAAQ,GACtCE,EAAQJ,EAAaG,IAAIlB,EAAOmB,QAAU,GAC1CC,EAAYL,EAAaM,OAAOrB,EAAOoB,YAAc,GAgBrDE,EAAiB,SAACC,GAAD,OAAqB,SAC1CC,GAEAA,EAAMC,iBACN,IAAMC,EAAS,IAAIC,gBAAgBZ,GAEnC,GAAIQ,IAAexB,EAAI6B,IAIrB,OAHAF,EAAOG,OAAO7B,EAAOiB,UACrBD,EAAgBU,GAKlBA,EAAOI,IAAI9B,EAAOiB,IAAKM,GACvBP,EAAgBU,KAGZK,EAAuB,SAACC,GAAD,OAA4B,SACvDR,GAEAA,EAAMC,iBAEN,IAAMC,EAAS,IAAIC,gBAAgBZ,GAEnC,GAAIK,EAAUa,SAASD,GAUrB,OATAN,EAAOG,OAAO7B,EAAOoB,WACrBA,EAAUc,SAAQ,SAAAC,GACZA,IAAYH,GACdN,EAAOU,OAAOpC,EAAOoB,UAAWe,WAIpCnB,EAAgBU,GAKlBA,EAAOU,OAAOpC,EAAOoB,UAAWY,GAChChB,EAAgBU,KA2BlB,OACE,sBAAKnB,UAAU,QAAf,UACE,mBAAGA,UAAU,gBAAb,qBAEA,oBAAGA,UAAU,aAAaD,UAAQ,YAAlC,UACE,cAAC,IAAD,CACEC,UAAYU,EAAoB,GAAd,YAClBP,GAAE,kBAAaK,EAAasB,YAC5BC,QAAShB,EAAevB,EAAI6B,KAH9B,iBAQA,cAAC,IAAD,CACErB,UAAWU,IAAQlB,EAAIwC,KAAO,YAAc,GAC5C7B,GAAG,UACH4B,QAAShB,EAAevB,EAAIwC,MAH9B,kBAQA,cAAC,IAAD,CACEhC,UAAWU,IAAQlB,EAAIyC,OAAS,YAAc,GAC9C9B,GAAG,UACH4B,QAAShB,EAAevB,EAAIyC,QAH9B,uBASF,qBAAKjC,UAAU,cAAf,SACE,oBAAGA,UAAU,yBAAb,UACE,uBACED,UAAQ,aACRmC,KAAK,SACLlC,UAAU,QACVmC,YAAY,SACZC,MAAOxB,EACPyB,SArHgB,SAACpB,GACzB,IAAME,EAAS,IAAIC,gBAAgBZ,GAEnC,IAAKS,EAAMqB,OAAOF,MAIhB,OAHAjB,EAAOG,OAAO7B,EAAOmB,YACrBH,EAAgBU,GAKlBA,EAAOI,IAAI9B,EAAOmB,MAAOK,EAAMqB,OAAOF,OACtC3B,EAAgBU,MA6GV,sBAAMnB,UAAU,eAAhB,SACE,mBAAGA,UAAU,gBAAgBuC,cAAY,gBAK/C,qBAAKvC,UAAU,cAAf,SACE,sBAAKA,UAAU,iCAAiCD,UAAQ,gBAAxD,UACE,sBAAKC,UAAU,aAAf,UACE,cAAC,IAAD,CACED,UAAQ,UACRC,UAAS,sBAAiBa,EAAUa,SAAS,OAAS,WACtDvB,GAAG,uBACH4B,QAASP,EAAqB,MAJhC,gBASA,cAAC,IAAD,CACEzB,UAAQ,UACRC,UAAS,sBAAiBa,EAAUa,SAAS,OAAS,WACtDvB,GAAG,uBACH4B,QAASP,EAAqB,MAJhC,gBASA,cAAC,IAAD,CACEzB,UAAQ,UACRC,UAAS,sBAAiBa,EAAUa,SAAS,OAAS,WACtDvB,GAAG,uBACH4B,QAASP,EAAqB,MAJhC,gBASA,cAAC,IAAD,CACEzB,UAAQ,UACRC,UAAS,sBAAiBa,EAAUa,SAAS,OAAS,WACtDvB,GAAG,uBACH4B,QAASP,EAAqB,MAJhC,gBASA,cAAC,IAAD,CACEzB,UAAQ,UACRC,UAAS,sBAAiBa,EAAUa,SAAS,OAAS,WACtDvB,GAAG,uBACH4B,QAASP,EAAqB,MAJhC,mBAUF,qBAAKxB,UAAU,mBAAf,SACE,cAAC,IAAD,CACED,UAAQ,aACRC,UAAS,8BAAyBa,EAAU2B,QAAU,eACtDrC,GAAG,UACH4B,QA7HwB,SAClCd,GAEAA,EAAMC,iBACNV,EAAac,OAAO7B,EAAOoB,WAC3BJ,EAAgBD,IAoHR,wBAYN,qBAAKR,UAAU,cAAf,SACE,cAAC,IAAD,CACEA,UAAU,0CACVG,GAAG,UACH4B,QAjIyB,SAC/Bd,GAEAA,EAAMC,iBAEN,IAAMC,EAAS,IAAIC,gBAEnBZ,EAAamB,SAAQ,SAACS,EAAOK,GACb,SAAVA,GAA8B,UAAVA,GACtBtB,EAAOI,IAAIkB,EAAOL,MAItB3B,EAAgBU,IAiHZ,qCIhNKuB,G,MAAS,kBACpB,qBAAK1C,UAAU,SAASD,UAAQ,SAAhC,SACE,qBAAKC,UAAU,wB,2BDKdR,K,YAAAA,M,KAIE,IEHFA,EAKAC,EAQAkD,EFVQC,EAA8B,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAC5CC,EAAaC,cAAbD,SACR,EAAuBxC,cAAhBC,EAAP,oBAGEyC,EAOEJ,EAPFI,KACAvC,EAMEmC,EANFnC,IACAwC,EAKEL,EALFK,KACAC,EAIEN,EAJFM,KACAC,EAGEP,EAHFO,WACAC,EAEER,EAFFQ,WACAC,EACET,EADFS,KAWIC,EAPiBT,EAAOU,MAAK,SAAAC,GAC/B,OAAOA,EAAIR,OAASG,KAgBlBM,EAPiBZ,EAAOU,MAAK,SAAAC,GAC/B,OAAOA,EAAIR,OAASI,KAQxB,OACE,qBACEtD,UAAQ,SACRC,UAAW+C,IAAaO,EACpB,yBAA2B,GAHjC,UAKE,6BACE,cAAC,IAAD,CACEnD,GAAE,kBAAamD,EAAb,YAAqB9C,EAAasB,YACpC9B,UAAWU,IAAQlB,EAAIyC,OAAS,kBAAoB,GAFtD,SAIGgB,MAIL,6BAAKvC,IACL,6BAAKwC,IACL,6BAAKC,IAEL,6BACGI,EACC,cAAC,IAAD,CACEpD,GAAE,kBAAaoD,EAAeD,KAA5B,YAAoC9C,EAAasB,YACnD9B,UAAU,kBAFZ,SAIGuD,EAAeN,OAGlBG,GAAc,MAIlB,6BACGM,EACC,cAAC,IAAD,CACEvD,GAAE,kBAAauD,EAAeJ,KAA5B,YAAoC9C,EAAasB,YADrD,SAGG4B,EAAeT,OAGlBI,GAAc,W,SE7EnB7D,K,SAAAA,E,YAAAA,M,cAKAC,K,UAAAA,E,YAAAA,E,cAAAA,E,cAAAA,E,uBAAAA,M,cAQAkD,K,UAAAA,E,YAAAA,E,YAAAA,E,YAAAA,E,aAAAA,M,KAQE,IAAMgB,EAA+B,SAAC,GAEtC,IADLb,EACI,EADJA,OAEA,EAAwCvC,cAAxC,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAMF,EAAaG,IAAIlB,EAAOiB,MAAQ,GACtCkD,EAAOpD,EAAaG,IAAIlB,EAAOmE,OAAS,GACxChD,EAAQJ,EAAaG,IAAIlB,EAAOmB,QAAU,GAC1CiD,EAAQrD,EAAaG,IAAIlB,EAAOoE,QAAU,GAC1ChD,EAAYL,EAAaM,OAAOrB,EAAOoB,YAAc,GAErDiD,EAA0B,SAACC,GAC/B,OAAIlD,EAAU2B,OAAS,EACduB,EAAIC,QAAO,SAAAnB,GAChB,IAAMjB,EAAUqC,KAAKC,KAAKrB,EAAOK,KAAO,KAExC,OAAOrC,EAAUa,SAASE,EAAQE,eAI/BiC,GAGHI,EAAsB,SAACJ,GAC3B,IAAMK,EAAqBxD,EAAMyD,cAEjC,OAAON,EAAIC,QAAO,SAAAnB,GAAW,IAAD,IAC1B,OAAIA,EAAOI,KAAKoB,cAAc3C,SAAS0C,KAIvC,UAAIvB,EAAOQ,kBAAX,aAAI,EAAmBgB,cAAc3C,SAAS0C,QAI9C,UAAIvB,EAAOO,kBAAX,aAAI,EAAmBiB,cAAc3C,SAAS0C,MAPrCvB,MAkCPyB,EAAwB,SAC5BrD,EACAmB,GAIA,OAFAnB,EAAMC,iBAEEkB,GACN,KAAKO,EAAWM,KACd,IAAM9B,EAAS,IAAIC,gBAAgBZ,GAEnC,GAAIW,EAAOoD,IAAI9E,EAAOoE,QAAUD,IAASjB,EAAWM,KAAM,CACxD9B,EAAOG,OAAO7B,EAAOoE,OACrB1C,EAAOG,OAAO7B,EAAOmE,MACrBnD,EAAgBU,GAEhB,MAGF,GAAIA,EAAOoD,IAAI9E,EAAOoE,QAAUD,IAASjB,EAAWM,KAAM,CACxD9B,EAAOG,OAAO7B,EAAOoE,OACrB1C,EAAOI,IAAI9B,EAAOmE,KAAMjB,EAAWM,MACnCxC,EAAgBU,GAEhB,MAGF,GAAIyC,IAASjB,EAAWM,KAAM,CAC5B9B,EAAOI,IAAI9B,EAAOoE,MAAOlB,EAAW6B,MACpC/D,EAAgBU,GAEhB,MAGFA,EAAOI,IAAI9B,EAAOmE,KAAMjB,EAAWM,MACnCxC,EAAgBU,GAEhB,MAGF,KAAKwB,EAAWjC,IACd,IAAMS,EAAS,IAAIC,gBAAgBZ,GAEnC,GAAIW,EAAOoD,IAAI9E,EAAOoE,QAAUD,IAASjB,EAAWjC,IAAK,CACvDS,EAAOG,OAAO7B,EAAOoE,OACrB1C,EAAOG,OAAO7B,EAAOmE,MACrBnD,EAAgBU,GAEhB,MAGF,GAAIA,EAAOoD,IAAI9E,EAAOoE,QAAUD,IAASjB,EAAWjC,IAAK,CACvDS,EAAOG,OAAO7B,EAAOoE,OACrB1C,EAAOI,IAAI9B,EAAOmE,KAAMjB,EAAWjC,KACnCD,EAAgBU,GAEhB,MAGF,GAAIyC,IAASjB,EAAWjC,IAAK,CAC3BS,EAAOI,IAAI9B,EAAOoE,MAAOlB,EAAW6B,MACpC/D,EAAgBU,GAEhB,MAGFA,EAAOI,IAAI9B,EAAOmE,KAAMjB,EAAWjC,KACnCD,EAAgBU,GAEhB,MAGF,KAAKwB,EAAWO,KACd,IAAM/B,EAAS,IAAIC,gBAAgBZ,GAEnC,GAAIW,EAAOoD,IAAI9E,EAAOoE,QAAUD,IAASjB,EAAWO,KAAM,CACxD/B,EAAOG,OAAO7B,EAAOoE,OACrB1C,EAAOG,OAAO,QACdb,EAAgBU,GAEhB,MAGF,GAAIA,EAAOoD,IAAI9E,EAAOoE,QAAUD,IAASjB,EAAWO,KAAM,CACxD/B,EAAOG,OAAO7B,EAAOoE,OACrB1C,EAAOI,IAAI9B,EAAOmE,KAAMjB,EAAWO,MACnCzC,EAAgBU,GAEhB,MAGF,GAAIyC,IAASjB,EAAWO,KAAM,CAC5B/B,EAAOI,IAAI9B,EAAOoE,MAAOlB,EAAW6B,MACpC/D,EAAgBU,GAEhB,MAGFA,EAAOI,IAAI9B,EAAOmE,KAAMjB,EAAWO,MACnCzC,EAAgBU,GAEhB,MAGF,KAAKwB,EAAWQ,KACd,IAAMhC,EAAS,IAAIC,gBAAgBZ,GAEnC,GAAIW,EAAOoD,IAAI9E,EAAOoE,QAAUD,IAASjB,EAAWQ,KAAM,CACxDhC,EAAOG,OAAO7B,EAAOoE,OACrB1C,EAAOG,OAAO,QACdb,EAAgBU,GAEhB,MAGF,GAAIA,EAAOoD,IAAI9E,EAAOoE,QAAUD,IAASjB,EAAWQ,KAAM,CACxDhC,EAAOG,OAAO7B,EAAOoE,OACrB1C,EAAOI,IAAI9B,EAAOmE,KAAMjB,EAAWQ,MACnC1C,EAAgBU,GAEhB,MAGF,GAAIyC,IAASjB,EAAWQ,KAAM,CAC5BhC,EAAOI,IAAI9B,EAAOoE,MAAOlB,EAAW6B,MACpC/D,EAAgBU,GAEhB,MAGFA,EAAOI,IAAI9B,EAAOmE,KAAMjB,EAAWQ,MACnC1C,EAAgBU,KAkEhBsD,EAvDa,SAACV,GAClB,OAAQH,GACN,KAAKjB,EAAWM,KACd,OAAIY,EACKE,EAAIH,MAAK,SAACc,EAASC,GACxB,OAAOA,EAAQ1B,KAAK2B,cAAcF,EAAQzB,SAIvCc,EAAIH,MAAK,SAACc,EAASC,GACxB,OAAOD,EAAQzB,KAAK2B,cAAcD,EAAQ1B,SAI9C,KAAKN,EAAWjC,IACd,OAAImD,EACKE,EAAIH,MAAK,SAACc,EAASC,GACxB,OAAOA,EAAQjE,IAAIkE,cAAcF,EAAQhE,QAItCqD,EAAIH,MAAK,SAACc,EAASC,GACxB,OAAOD,EAAQhE,IAAIkE,cAAcD,EAAQjE,QAI7C,KAAKiC,EAAWO,KACd,OAAIW,EACKE,EAAIH,MAAK,SAACc,EAASC,GACxB,OAAOA,EAAQzB,KAAOwB,EAAQxB,QAI3Ba,EAAIH,MAAK,SAACc,EAASC,GACxB,OAAOD,EAAQxB,KAAOyB,EAAQzB,QAIlC,KAAKP,EAAWQ,KACd,OAAIU,EACKE,EAAIH,MAAK,SAACc,EAASC,GACxB,OAAOA,EAAQxB,KAAOuB,EAAQvB,QAI3BY,EAAIH,MAAK,SAACc,EAASC,GACxB,OAAOD,EAAQvB,KAAOwB,EAAQxB,QAIlC,QACE,OAAOY,GAISc,CAvNO,SAACd,GAC5B,OAAQrD,GACN,KAAKlB,EAAIyC,OACP,IAAM6C,EAASf,EAAIC,QAAO,SAAAnB,GAAM,OAAIA,EAAOnC,MAAQlB,EAAIyC,UAEvD,OAAO6B,EAAwBK,EAAoBW,IAGrD,KAAKtF,EAAIwC,KACP,IAAM8C,EAASf,EAAIC,QAAO,SAAAnB,GAAM,OAAIA,EAAOnC,MAAQlB,EAAIwC,QAEvD,OAAO8B,EAAwBK,EAAoBW,IAGrD,QACE,OAAOhB,EAAwBK,EAAoBJ,KAwMxBgB,CAAqBjC,IAEtD,OACE,mCACI2B,EAAcjC,OAGd,wBACEzC,UAAQ,cACRC,UAAU,uDAFZ,UAIE,gCACE,+BACE,6BACE,uBAAMA,UAAU,8BAAhB,iBAEE,cAAC,IAAD,CAAMG,GAAG,UAAT,SACE,sBACEH,UAAU,OACV+B,QAAS,SAACiD,GAAD,OAAOV,EAAsBU,EAAGrC,EAAWM,OACpDV,cAAY,OAHd,SAKE,mBAAGvC,UAAWiF,IAAW,MAAO,CAC9B,UAAWrB,IAASjB,EAAWM,KAC/B,aAAcW,IAASjB,EAAWM,OAASY,EAC3C,eAAgBD,IAASjB,EAAWM,QAAUY,eAQxD,6BACE,uBAAM7D,UAAU,8BAAhB,gBAEE,cAAC,IAAD,CAAMG,GAAG,UAAT,SACE,sBACEH,UAAU,OACV+B,QAAS,SAACiD,GAAD,OAAOV,EAAsBU,EAAGrC,EAAWjC,MACpD6B,cAAY,OAHd,SAKE,mBAAGvC,UAAWiF,IAAW,MAAO,CAC9B,UAAWrB,IAASjB,EAAWjC,IAC/B,aAAckD,IAASjB,EAAWjC,MAAQmD,EAC1C,eAAgBD,IAASjB,EAAWjC,OAASmD,eAQvD,6BACE,uBAAM7D,UAAU,8BAAhB,iBAEE,cAAC,IAAD,CAAMG,GAAG,UAAT,SACE,sBACEH,UAAU,OACV+B,QAAS,SAACiD,GAAD,OAAOV,EAAsBU,EAAGrC,EAAWO,OACpDX,cAAY,OAHd,SAKE,mBAAGvC,UAAWiF,IAAW,MAAO,CAC9B,UAAWrB,IAASjB,EAAWO,KAC/B,aAAcU,IAASjB,EAAWO,OAASW,EAC3C,eAAgBD,IAASjB,EAAWO,QAAUW,eAQxD,6BACE,uBAAM7D,UAAU,8BAAhB,iBAEE,cAAC,IAAD,CAAMG,GAAG,UAAT,SACE,sBACEH,UAAU,OACV+B,QAAS,SAACiD,GAAD,OAAOV,EAAsBU,EAAGrC,EAAWQ,OACpDZ,cAAY,OAHd,SAKE,mBAAGvC,UAAWiF,IAAW,MAAO,CAC9B,UAAWrB,IAASjB,EAAWQ,KAC/B,aAAcS,IAASjB,EAAWQ,OAASU,EAC3C,eAAgBD,IAASjB,EAAWQ,QAAUU,eAQxD,wCACA,6CAIJ,gCACGY,EAAcS,KAAI,SAAArC,GAAM,OACvB,cAAC,EAAD,CAA8BA,OAAQA,EAAQC,OAAQA,GAArCD,EAAOS,cA/F9B,4F,uBCnSF6B,EAAU,oEAEhB,SAASC,EAAKC,GACZ,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,M,4CAG7C,sBAAAI,EAAA,+EAEEL,EAAK,KACTM,MAAK,kBAAMC,MAAMR,MACjBO,MAAK,SAAAE,GAAQ,OAAIA,EAASC,WAJxB,4C,sBCFA,IAAMC,EAAa,WACxB,MAA4BC,mBAAmB,IAA/C,mBAAOjD,EAAP,KAAekD,EAAf,KACA,EAA4BD,oBAAS,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KAUA,OARAC,qBAAU,WACRH,GAAU,GDJP,WAAP,+BCKII,GACGZ,KAAKM,GACLO,OAAM,kBAAMH,GAAW,MACvBI,SAAQ,kBAAMN,GAAU,QAC1B,IAGD,qCACE,oBAAIlG,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,mDAAf,YACK8C,EAAON,SAAW2D,GACnB,qBAAKnG,UAAU,uCAAf,SACE,cAAC,EAAD,MAIJ,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,sBAAf,UACGiG,GAAU,cAAC,EAAD,KAETnD,EAAON,SAAWyD,IAAWE,GAC7B,mBAAGpG,UAAQ,kBAAX,iDAKC+C,EAAON,SAAW2D,GACnB,cAAC,EAAD,CAAarD,OAAQA,IAGtBqD,GACC,mBAAGpG,UAAQ,qBAAqBC,UAAU,kBAA1C,gDC3CHyG,EAAO,kBAClB,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,oBAAI3G,UAAU,QAAd,yBACtB,cAAC,IAAD,CAAO0G,KAAK,SAASC,QAAS,cAAC,EAAD,IAA9B,SACE,cAAC,IAAD,CAAOD,KAAK,gBAGd,cAAC,IAAD,CAAOA,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUxG,GAAG,IAAI0G,SAAO,MAErD,cAAC,IAAD,CAAOH,KAAK,IAAIC,QAAS,oBAAI3G,UAAU,QAAd,oCCN/B8G,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.709ec33c.chunk.js","sourcesContent":["import { useSearchParams, Link, NavLink } from 'react-router-dom';\n\nenum Sex {\n  all = 'all',\n  male = 'm',\n  female = 'f',\n}\n\nenum Params {\n  sex = 'sex',\n  query = 'query',\n  centuries = 'centuries',\n}\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const sex = searchParams.get(Params.sex) || '';\n  const query = searchParams.get(Params.query) || '';\n  const centuries = searchParams.getAll(Params.centuries) || '';\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const params = new URLSearchParams(searchParams);\n\n    if (!event.target.value) {\n      params.delete(Params.query);\n      setSearchParams(params);\n\n      return;\n    }\n\n    params.set(Params.query, event.target.value);\n    setSearchParams(params);\n  };\n\n  const handleClickSex = (currentSex: Sex) => (\n    event: React.MouseEvent<HTMLAnchorElement>,\n  ) => {\n    event.preventDefault();\n    const params = new URLSearchParams(searchParams);\n\n    if (currentSex === Sex.all) {\n      params.delete(Params.sex);\n      setSearchParams(params);\n\n      return;\n    }\n\n    params.set(Params.sex, currentSex);\n    setSearchParams(params);\n  };\n\n  const handleClickCenturies = (currentCentury: string) => (\n    event: React.MouseEvent<HTMLAnchorElement>,\n  ) => {\n    event.preventDefault();\n\n    const params = new URLSearchParams(searchParams);\n\n    if (centuries.includes(currentCentury)) {\n      params.delete(Params.centuries);\n      centuries.forEach(century => {\n        if (century !== currentCentury) {\n          params.append(Params.centuries, century);\n        }\n      });\n\n      setSearchParams(params);\n\n      return;\n    }\n\n    params.append(Params.centuries, currentCentury);\n    setSearchParams(params);\n  };\n\n  const handleClickWithoutCenturies = (\n    event: React.MouseEvent<HTMLAnchorElement>,\n  ) => {\n    event.preventDefault();\n    searchParams.delete(Params.centuries);\n    setSearchParams(searchParams);\n  };\n\n  const handleclickDeleteFilters = (\n    event: React.MouseEvent<HTMLAnchorElement>,\n  ) => {\n    event.preventDefault();\n\n    const params = new URLSearchParams();\n\n    searchParams.forEach((value, param) => {\n      if (param === 'sort' || param === 'order') {\n        params.set(param, value);\n      }\n    });\n\n    setSearchParams(params);\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <Link\n          className={!sex ? 'is-active' : ''}\n          to={`/people?${searchParams.toString()}`}\n          onClick={handleClickSex(Sex.all)}\n        >\n          All\n        </Link>\n\n        <Link\n          className={sex === Sex.male ? 'is-active' : ''}\n          to=\"/people\"\n          onClick={handleClickSex(Sex.male)}\n        >\n          Male\n        </Link>\n\n        <Link\n          className={sex === Sex.female ? 'is-active' : ''}\n          to=\"/people\"\n          onClick={handleClickSex(Sex.female)}\n        >\n          Female\n        </Link>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleChangeQuery}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            <NavLink\n              data-cy=\"century\"\n              className={`button mr-1 ${centuries.includes('16') && 'is-info'}`}\n              to=\"/people?centuries=16\"\n              onClick={handleClickCenturies('16')}\n            >\n              16\n            </NavLink>\n\n            <Link\n              data-cy=\"century\"\n              className={`button mr-1 ${centuries.includes('17') && 'is-info'}`}\n              to=\"/people?centuries=17\"\n              onClick={handleClickCenturies('17')}\n            >\n              17\n            </Link>\n\n            <Link\n              data-cy=\"century\"\n              className={`button mr-1 ${centuries.includes('18') && 'is-info'}`}\n              to=\"/people?centuries=18\"\n              onClick={handleClickCenturies('18')}\n            >\n              18\n            </Link>\n\n            <Link\n              data-cy=\"century\"\n              className={`button mr-1 ${centuries.includes('19') && 'is-info'}`}\n              to=\"/people?centuries=19\"\n              onClick={handleClickCenturies('19')}\n            >\n              19\n            </Link>\n\n            <Link\n              data-cy=\"century\"\n              className={`button mr-1 ${centuries.includes('20') && 'is-info'}`}\n              to=\"/people?centuries=20\"\n              onClick={handleClickCenturies('20')}\n            >\n              20\n            </Link>\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <Link\n              data-cy=\"centuryALL\"\n              className={`button is-success ${!!centuries.length && 'is-outlined'}`}\n              to=\"/people\"\n              onClick={handleClickWithoutCenturies}\n            >\n              All\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <Link\n          className=\"button is-link is-outlined is-fullwidth\"\n          to=\"/people\"\n          onClick={handleclickDeleteFilters}\n        >\n          Reset all filters\n        </Link>\n      </div>\n    </nav>\n  );\n};\n","import { NavLink, useLocation } from 'react-router-dom';\n\nconst haveActive = ({ isActive }: { isActive: boolean }) => {\n  return isActive ? 'navbar-item has-background-grey-lighter' : 'navbar-item';\n};\n\nexport const Navbar = () => {\n  const { search } = useLocation();\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={haveActive}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            aria-current=\"page\"\n            className={haveActive}\n            to={`/people${search}`}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Link, useParams, useSearchParams } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n  people: Person[],\n};\n\nenum Sex {\n  female = 'f',\n}\n\nexport const PersonLink: React.FC<Props> = ({ person, people }) => {\n  const { personId } = useParams();\n  const [searchParams] = useSearchParams();\n\n  const {\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    slug,\n  } = person;\n\n  const haveMotherFromPeople = () => {\n    const findedMother = people.find(per => {\n      return per.name === motherName;\n    });\n\n    return findedMother;\n  };\n\n  const isFindedMother = haveMotherFromPeople();\n\n  const haveFatherFromPeople = () => {\n    const findedFather = people.find(per => {\n      return per.name === fatherName;\n    });\n\n    return findedFather;\n  };\n\n  const isFindedFather = haveFatherFromPeople();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={personId === slug\n        ? 'has-background-warning' : ''}\n    >\n      <td>\n        <Link\n          to={`/people/${slug}?${searchParams.toString()}`}\n          className={sex === Sex.female ? 'has-text-danger' : ''}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>\n        {isFindedMother ? (\n          <Link\n            to={`/people/${isFindedMother.slug}?${searchParams.toString()}`}\n            className=\"has-text-danger\"\n          >\n            {isFindedMother.name}\n          </Link>\n        ) : (\n          motherName || '-'\n        )}\n      </td>\n\n      <td>\n        {isFindedFather ? (\n          <Link\n            to={`/people/${isFindedFather.slug}?${searchParams.toString()}`}\n          >\n            {isFindedFather.name}\n          </Link>\n        ) : (\n          fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[],\n};\n\nenum Sex {\n  male = 'm',\n  female = 'f',\n}\n\nenum Params {\n  sex = 'sex',\n  sort = 'sort',\n  query = 'query',\n  order = 'order',\n  centuries = 'centuries',\n}\n\nenum SortParams {\n  sex = 'sex',\n  name = 'name',\n  born = 'born',\n  died = 'died',\n  desc = 'desc',\n}\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n}) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const sex = searchParams.get(Params.sex) || '';\n  const sort = searchParams.get(Params.sort) || '';\n  const query = searchParams.get(Params.query) || '';\n  const order = searchParams.get(Params.order) || '';\n  const centuries = searchParams.getAll(Params.centuries) || '';\n\n  const filterPeopleByCenturies = (men: Person[]) => {\n    if (centuries.length > 0) {\n      return men.filter(person => {\n        const century = Math.ceil(person.born / 100);\n\n        return centuries.includes(century.toString());\n      });\n    }\n\n    return men;\n  };\n\n  const filterPeopleByQuery = (men: Person[]) => {\n    const queryLowerRegister = query.toLowerCase();\n\n    return men.filter(person => {\n      if (person.name.toLowerCase().includes(queryLowerRegister)) {\n        return person;\n      }\n\n      if (person.fatherName?.toLowerCase().includes(queryLowerRegister)) {\n        return person;\n      }\n\n      if (person.motherName?.toLowerCase().includes(queryLowerRegister)) {\n        return person;\n      }\n\n      return false;\n    });\n  };\n\n  const fullFiltrationPeople = (men: Person[]) => {\n    switch (sex) {\n      case Sex.female: {\n        const result = men.filter(person => person.sex === Sex.female);\n\n        return filterPeopleByCenturies(filterPeopleByQuery(result));\n      }\n\n      case Sex.male: {\n        const result = men.filter(person => person.sex === Sex.male);\n\n        return filterPeopleByCenturies(filterPeopleByQuery(result));\n      }\n\n      default:\n        return filterPeopleByCenturies(filterPeopleByQuery(men));\n    }\n  };\n\n  const handleClickSortPeople = (\n    event: React.MouseEvent<HTMLSpanElement>,\n    value: string,\n  ) => {\n    event.preventDefault();\n\n    switch (value) {\n      case SortParams.name: {\n        const params = new URLSearchParams(searchParams);\n\n        if (params.has(Params.order) && sort === SortParams.name) {\n          params.delete(Params.order);\n          params.delete(Params.sort);\n          setSearchParams(params);\n\n          break;\n        }\n\n        if (params.has(Params.order) && sort !== SortParams.name) {\n          params.delete(Params.order);\n          params.set(Params.sort, SortParams.name);\n          setSearchParams(params);\n\n          break;\n        }\n\n        if (sort === SortParams.name) {\n          params.set(Params.order, SortParams.desc);\n          setSearchParams(params);\n\n          break;\n        }\n\n        params.set(Params.sort, SortParams.name);\n        setSearchParams(params);\n\n        break;\n      }\n\n      case SortParams.sex: {\n        const params = new URLSearchParams(searchParams);\n\n        if (params.has(Params.order) && sort === SortParams.sex) {\n          params.delete(Params.order);\n          params.delete(Params.sort);\n          setSearchParams(params);\n\n          break;\n        }\n\n        if (params.has(Params.order) && sort !== SortParams.sex) {\n          params.delete(Params.order);\n          params.set(Params.sort, SortParams.sex);\n          setSearchParams(params);\n\n          break;\n        }\n\n        if (sort === SortParams.sex) {\n          params.set(Params.order, SortParams.desc);\n          setSearchParams(params);\n\n          break;\n        }\n\n        params.set(Params.sort, SortParams.sex);\n        setSearchParams(params);\n\n        break;\n      }\n\n      case SortParams.born: {\n        const params = new URLSearchParams(searchParams);\n\n        if (params.has(Params.order) && sort === SortParams.born) {\n          params.delete(Params.order);\n          params.delete('sort');\n          setSearchParams(params);\n\n          break;\n        }\n\n        if (params.has(Params.order) && sort !== SortParams.born) {\n          params.delete(Params.order);\n          params.set(Params.sort, SortParams.born);\n          setSearchParams(params);\n\n          break;\n        }\n\n        if (sort === SortParams.born) {\n          params.set(Params.order, SortParams.desc);\n          setSearchParams(params);\n\n          break;\n        }\n\n        params.set(Params.sort, SortParams.born);\n        setSearchParams(params);\n\n        break;\n      }\n\n      case SortParams.died: {\n        const params = new URLSearchParams(searchParams);\n\n        if (params.has(Params.order) && sort === SortParams.died) {\n          params.delete(Params.order);\n          params.delete('sort');\n          setSearchParams(params);\n\n          break;\n        }\n\n        if (params.has(Params.order) && sort !== SortParams.died) {\n          params.delete(Params.order);\n          params.set(Params.sort, SortParams.died);\n          setSearchParams(params);\n\n          break;\n        }\n\n        if (sort === SortParams.died) {\n          params.set(Params.order, SortParams.desc);\n          setSearchParams(params);\n\n          break;\n        }\n\n        params.set(Params.sort, SortParams.died);\n        setSearchParams(params);\n\n        break;\n      }\n\n      default: {\n        break;\n      }\n    }\n  };\n\n  const sortPeople = (men: Person[]) => {\n    switch (sort) {\n      case SortParams.name: {\n        if (order) {\n          return men.sort((person1, person2) => {\n            return person2.name.localeCompare(person1.name);\n          });\n        }\n\n        return men.sort((person1, person2) => {\n          return person1.name.localeCompare(person2.name);\n        });\n      }\n\n      case SortParams.sex: {\n        if (order) {\n          return men.sort((person1, person2) => {\n            return person2.sex.localeCompare(person1.sex);\n          });\n        }\n\n        return men.sort((person1, person2) => {\n          return person1.sex.localeCompare(person2.sex);\n        });\n      }\n\n      case SortParams.born: {\n        if (order) {\n          return men.sort((person1, person2) => {\n            return person2.born - person1.born;\n          });\n        }\n\n        return men.sort((person1, person2) => {\n          return person1.born - person2.born;\n        });\n      }\n\n      case SortParams.died: {\n        if (order) {\n          return men.sort((person1, person2) => {\n            return person2.died - person1.died;\n          });\n        }\n\n        return men.sort((person1, person2) => {\n          return person1.died - person2.died;\n        });\n      }\n\n      default:\n        return men;\n    }\n  };\n\n  const filtredPeople = sortPeople(fullFiltrationPeople(people));\n\n  return (\n    <>\n      {!filtredPeople.length ? (\n        <p>There are no people matching the current search criteria</p>\n      ) : (\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  Name\n                  <Link to=\"/people\">\n                    <span\n                      className=\"icon\"\n                      onClick={(e) => handleClickSortPeople(e, SortParams.name)}\n                      aria-hidden=\"true\"\n                    >\n                      <i className={classNames('fas', {\n                        'fa-sort': sort !== SortParams.name,\n                        'fa-sort-up': sort === SortParams.name && !order,\n                        'fa-sort-down': sort === SortParams.name && !!order,\n                      })}\n                      />\n                    </span>\n                  </Link>\n                </span>\n              </th>\n\n              <th>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  Sex\n                  <Link to=\"/people\">\n                    <span\n                      className=\"icon\"\n                      onClick={(e) => handleClickSortPeople(e, SortParams.sex)}\n                      aria-hidden=\"true\"\n                    >\n                      <i className={classNames('fas', {\n                        'fa-sort': sort !== SortParams.sex,\n                        'fa-sort-up': sort === SortParams.sex && !order,\n                        'fa-sort-down': sort === SortParams.sex && !!order,\n                      })}\n                      />\n                    </span>\n                  </Link>\n                </span>\n              </th>\n\n              <th>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  Born\n                  <Link to=\"/people\">\n                    <span\n                      className=\"icon\"\n                      onClick={(e) => handleClickSortPeople(e, SortParams.born)}\n                      aria-hidden=\"true\"\n                    >\n                      <i className={classNames('fas', {\n                        'fa-sort': sort !== SortParams.born,\n                        'fa-sort-up': sort === SortParams.born && !order,\n                        'fa-sort-down': sort === SortParams.born && !!order,\n                      })}\n                      />\n                    </span>\n                  </Link>\n                </span>\n              </th>\n\n              <th>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  Died\n                  <Link to=\"/people\">\n                    <span\n                      className=\"icon\"\n                      onClick={(e) => handleClickSortPeople(e, SortParams.died)}\n                      aria-hidden=\"true\"\n                    >\n                      <i className={classNames('fas', {\n                        'fa-sort': sort !== SortParams.died,\n                        'fa-sort-up': sort === SortParams.died && !order,\n                        'fa-sort-down': sort === SortParams.died && !!order,\n                      })}\n                      />\n                    </span>\n                  </Link>\n                </span>\n              </th>\n\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {filtredPeople.map(person => (\n              <PersonLink key={person.slug} person={person} people={people} />\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoad, setIsLoad] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoad(true);\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoad(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          {!!people.length && !isError && (\n            <div className=\"column is-7-tablet is-narrow-desktop\">\n              <PeopleFilters />\n            </div>\n          )}\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoad && <Loader />}\n\n              {!people.length && !isLoad && !isError && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {!!people.length && !isError && (\n                <PeopleTable people={people} />\n              )}\n\n              {isError && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport { App } from './App';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const Root = () => (\n  <Routes>\n    <Route path=\"/\" element={<App />}>\n      <Route index element={<h1 className=\"title\">Home Page</h1>} />\n      <Route path=\"people\" element={<PeoplePage />}>\n        <Route path=\":personId\" />\n      </Route>\n\n      <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n      <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n    </Route>\n  </Routes>\n);\n","import { HashRouter as Router } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\nReactDOM.render(\n  <Router>\n    <Root />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}